<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<doc>
<constantsCategories/>
<constants/>
<operatorsCategories>
<category id="Iterator operators"/>
<category id="OpenGIS"/>
</operatorsCategories>
<operators>
<operator alphabetOrder="ak" id="gml_from_wfs" name="gml_from_wfs">
<operatorCategories>
<category id="OpenGIS"/>
</operatorCategories>
<combinaisonIO>
<operands class="dream/gama/opengis/operators/OpenGIS.java" contentType="-13" returnType="msi.gama.util.IList&lt;msi.gama.util.IList&lt;java.lang.Object&gt;&gt;" type="-13">
<operand name="fakeFile" position="0" type="string"/>
<operand name="schemaLink" position="1" type="string"/>
<operand name="gmlLink" position="2" type="string"/>
</operands>
</combinaisonIO>
<documentation>
<result>WMS: A simple call to WFS/GML2</result>
</documentation>
</operator>
<operator alphabetOrder="ak" id="image_from_direct_wms" name="image_from_direct_wms">
<operatorCategories>
<category id="OpenGIS"/>
</operatorCategories>
<combinaisonIO>
<operands class="dream/gama/opengis/operators/OpenGIS.java" contentType="-13" returnType="file" type="-13">
<operand name="fakeFile" position="0" type="string"/>
<operand name="slink" position="1" type="string"/>
</operands>
</combinaisonIO>
<documentation>
<result>WMS: A simple call to WMS</result>
</documentation>
</operator>
<operator alphabetOrder="ak" id="image_from_wms" name="image_from_wms">
<operatorCategories>
<category id="OpenGIS"/>
</operatorCategories>
<combinaisonIO>
<operands class="dream/gama/opengis/operators/OpenGIS.java" contentType="-13" returnType="file" type="-13">
<operand name="fakeFile" position="0" type="string"/>
<operand name="slink" position="1" type="string"/>
<operand name="epsg" position="2" type="int"/>
<operand name="width" position="3" type="int"/>
<operand name="height" position="4" type="int"/>
<operand name="bbox1" position="5" type="float"/>
<operand name="bbox2" position="6" type="float"/>
<operand name="bbox3" position="7" type="float"/>
<operand name="bbox4" position="8" type="float"/>
</operands>
</combinaisonIO>
<documentation>
<result>WMS: A simple call to WMS</result>
</documentation>
</operator>
<operator alphabetOrder="lz" id="read_json_rest" name="read_json_rest">
<operatorCategories>
<category id="OpenGIS"/>
</operatorCategories>
<combinaisonIO>
<operands class="dream/gama/opengis/operators/OpenGIS.java" contentType="-13" returnType="msi.gama.util.IList&lt;msi.gama.util.IList&lt;java.lang.Object&gt;&gt;" type="-13">
<operand name="fakeFile" position="0" type="string"/>
<operand name="restLink" position="1" type="string"/>
</operands>
</combinaisonIO>
<documentation>
<result>REST: Read data from RESTService</result>
</documentation>
</operator>
</operators>
<skills>
<skill class="dream.gama.opengis.operators.SocketSkill" extends="" id="socket" name="socket">
<documentation>
<result>k</result>
</documentation>
<vars>
<var constant="false" depends_on="" name="msg" type="string"/>
<var constant="false" depends_on="" name="port" type="int">
<documentation>
<result>t)</result>
</documentation>
</var>
<var constant="false" depends_on="" name="ip" type="string">
<documentation>
<result>cs</result>
</documentation>
</var>
</vars>
<actions>
<action name="open_socket" returnType="void">
<args/>
<documentation>
<result>.</result>
<usagesExamples>
<usage>
<examples>
<example code="d;" isExecutable="true" isTestOnly="false" test="true"/>
</examples>
</usage>
</usagesExamples>
</documentation>
</action>
<action name="listen_client" returnType="void">
<args/>
<documentation>
<result>.</result>
<usagesExamples>
<usage>
<examples>
<example code="d;" isExecutable="true" isTestOnly="false" test="true"/>
</examples>
</usage>
</usagesExamples>
</documentation>
</action>
<action name="send_to_client" returnType="void">
<args>
<arg name="msg" optional="false" type="string">
<documentation>
<result>td)</result>
</documentation>
</arg>
</args>
<documentation>
<result>M.</result>
<usagesExamples>
<usage>
<examples>
<example code="tA;" isExecutable="true" isTestOnly="false" test="true"/>
</examples>
</usage>
</usagesExamples>
</documentation>
</action>
<action name="listen_server" returnType="void">
<args/>
<documentation>
<result>.</result>
<usagesExamples>
<usage>
<examples>
<example code="d;" isExecutable="true" isTestOnly="false" test="true"/>
</examples>
</usage>
</usagesExamples>
</documentation>
</action>
<action name="send_to_server" returnType="void">
<args>
<arg name="msg" optional="false" type="string">
<documentation>
<result>td)</result>
</documentation>
</arg>
</args>
<documentation>
<result>M.</result>
<usagesExamples>
<usage>
<examples>
<example code="tA;" isExecutable="true" isTestOnly="false" test="true"/>
</examples>
</usage>
</usagesExamples>
</documentation>
</action>
</actions>
</skill>
</skills>
<architectures/>
<speciess/>
<insideStatementKinds/>
<insideStatementSymbols/>
<statementsKinds/>
<statements/>
</doc>

